Metadata-Version: 2.1
Name: CureQ
Version: 1.0.7
Summary: Library for analyzing MEA files.
Home-page: https://github.com/CureQ/CureQ.git
Author: CureQ
Author-email: cureq-ft@hva.nl
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: matplotlib>=3.7.3
Requires-Dist: numpy>=1.26.4
Requires-Dist: h5py>=3.9.0
Requires-Dist: pandas>=2.1.4
Requires-Dist: scipy>=1.11.4
Requires-Dist: scikit-learn>=1.3.0
Requires-Dist: seaborn>=0.12.2
Requires-Dist: statsmodels>=0.14.0
Requires-Dist: scikit-image>=0.22.0
Requires-Dist: plotly>=5.14.0
Requires-Dist: KDEpy>=1.1.9
Requires-Dist: sv-ttk>=2.6.0

# CureQ

This is the repository of the CureQ consortium.<br>
For more information about the CureQ project, visit https://cureq.nl/
This repository contains a library with functions for analyzing MEA files.<br>
This repository is maintained by the Amsterdam University of Applied Sciences (AUMC).<br>
This library can process both Multi Channel Systems and Axion Biosystems MEA data, although the latter will have to be converted to hdf5 format using our MATLAB script, which can be found in the repository.
For more information about the analysis or how to use the library, check out the "CureQ MEA-analysis library User Guide.pdf" file.<br>

___

## Install the library

First, make sure you have installed a version of python on your machine, all python releases can be found here: https://www.python.org/downloads/ <br>
Secondly, make sure you have installed a package manager, like pip or conda. <br>
Next, open a terminal and navigate to your home folder.

#### Install library with pip
Install the MEA analyzer with the following command when you are using Pip:
```shell
pip install CureQ 
```

#### Install library with conda
Install the MEA analyzer with the following command when you are using Conda:
```shell
conda install CureQ::CureQ
```

---

## Library usage
Now you can try the CureQ library functions in your Python environment. <br>
Import the function you need, call this function and watch how the pipeline analyzes your MEA file!

#### Example for analyzing all MEA wells
```python
from CureQ.mea import analyse_wells               # Library function for analyzing wells

file_path = 'path/to/your/mea_file.h5'           # Path to your MEA file
hertz = 20000                                    # Sampling frequency of MEA system
electrodes = 12                                  # Electrode amount per well

# Analyzes all wells in the MEA file
if __name__=='__main__':
   analyse_wells(fileadress=file_path, hertz=hertz, electrode_amnt=electrodes)
```

---

## MEA GUI
Addionally, the CureQ mea library contains a graphical user interface that can be used to perform the analysis. <br>
The GUI is also used to inspect the raw MEA data and the analysis results. Example visualisations can be found below. <br>
The GUI can be opened as follows:

#### Opening the GUI
```python
from CureQ.mea_analysis_tool import MEA_GUI

if __name__=="__main__":
    MEA_GUI()
```

---

## Example visualisations

#### Spike detection
![Spike detection](https://github.com/CureQ/CureQ/blob/main/Example_visualisations/spike_detection.png)

#### Single burst detection
![Burst detection](https://github.com/CureQ/CureQ/blob/main/Example_visualisations/burst_detection.PNG)

#### Network burst detection
![Network burst detection](https://github.com/CureQ/CureQ/blob/main/Example_visualisations/network_burst_detection.PNG)

#### GUI
![results_window](https://github.com/CureQ/CureQ/blob/main/Example_visualisations/results_window.png)

![main_window](https://github.com/CureQ/CureQ/blob/main/Example_visualisations/main_window.png)

<!--
**CureQ/CureQ** is a âœ¨ _special_ âœ¨ repository because its `README.md` (this file) appears on your GitHub profile.
-->
